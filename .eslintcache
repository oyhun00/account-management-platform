[{"F:\\side\\amp\\src\\index.js":"1","F:\\side\\amp\\src\\reportWebVitals.js":"2","F:\\side\\amp\\src\\App.js":"3","F:\\side\\amp\\src\\Components\\Account\\index.js":"4","F:\\side\\amp\\src\\Components\\Account\\AccountList.js":"5","F:\\side\\amp\\src\\Components\\Layout\\Side\\index.js":"6","F:\\side\\amp\\src\\Components\\Layout\\Content\\index.js":"7","F:\\side\\amp\\src\\Components\\index.js":"8","F:\\side\\amp\\src\\Components\\Layout\\Content\\accountCard.js":"9","F:\\side\\amp\\src\\Components\\Layout\\Content\\AccountCard.js":"10","F:\\side\\amp\\src\\Components\\Layout\\Content\\CreateAccountCard.js":"11","F:\\side\\amp\\src\\Components\\Layout\\Content\\Form\\AccountForm.js":"12","F:\\side\\amp\\src\\Components\\Layout\\Side\\Menu.js":"13"},{"size":295,"mtime":1612255184964,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":413,"mtime":1612766299130,"results":"17","hashOfConfig":"15"},{"size":1052,"mtime":1611893104720,"results":"18","hashOfConfig":"15"},{"size":343,"mtime":1611889210059,"results":"19","hashOfConfig":"15"},{"size":4463,"mtime":1613546888895,"results":"20","hashOfConfig":"15"},{"size":4333,"mtime":1613542343028,"results":"21","hashOfConfig":"15"},{"size":770,"mtime":1612918821000,"results":"22","hashOfConfig":"15"},{"size":1738,"mtime":1612318506436,"results":"23","hashOfConfig":"15"},{"size":3515,"mtime":1613374975979,"results":"24","hashOfConfig":"15"},{"size":826,"mtime":1612334865950,"results":"25","hashOfConfig":"15"},{"size":1318,"mtime":1613375169843,"results":"26","hashOfConfig":"15"},{"size":1321,"mtime":1613546888354,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1j20o6c",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"F:\\side\\amp\\src\\index.js",[],["58","59"],"F:\\side\\amp\\src\\reportWebVitals.js",[],"F:\\side\\amp\\src\\App.js",[],"F:\\side\\amp\\src\\Components\\Account\\index.js",[],"F:\\side\\amp\\src\\Components\\Account\\AccountList.js",[],"F:\\side\\amp\\src\\Components\\Layout\\Side\\index.js",[],"F:\\side\\amp\\src\\Components\\Layout\\Content\\index.js",[],"F:\\side\\amp\\src\\Components\\index.js",[],"F:\\side\\amp\\src\\Components\\Layout\\Content\\accountCard.js",["60","61"],"F:\\side\\amp\\src\\Components\\Layout\\Content\\AccountCard.js",["62"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Card, Avatar, Row, Divider, Popover, List, Button } from 'antd';\r\nimport {\r\n  MoreOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n} from '@ant-design/icons';\r\nimport AccountLinkage from '../../../TempData/AccountLinkage.json';\r\n\r\n\r\nconst AccountCard = (props) => {\r\n  const { data, removeAccount, formUpdateToggle } = props;\r\n  const { id, siteNameKr, siteNameEng, siteUrl, siteIcon, accountId, accountPwd, linkedId } = data;\r\n  const LinkedFavicon = linkedId ? AccountLinkage.filter((v) => v.id === linkedId ) : '';\r\n  \r\n  const popMenu = (\r\n    <>\r\n      <List onClick={() => formUpdateToggle(id)}>수정<EditOutlined /></List>\r\n      <List onClick={() => removeAccount(id)}>삭제<DeleteOutlined /></List>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <CustomCard>\r\n      <CustomRow>\r\n        <CustomAvatar src={siteIcon} />\r\n        <PropWrap>\r\n          <SiteName>\r\n            <span>{siteNameKr}</span>\r\n            <span>{siteNameEng}</span>\r\n          </SiteName>\r\n          <SiteUrl>{siteUrl}</SiteUrl>\r\n        </PropWrap>\r\n      </CustomRow>\r\n      <CustomDivider />\r\n      <CustomRow>\r\n        { LinkedFavicon ? <CustomAvatar src={LinkedFavicon[0].favicon} /> : <CustomAvatar src={siteIcon} /> }\r\n        <PropWrap>\r\n          <AccountRow>\r\n            <Title>ID</Title>\r\n            <span>{accountId}</span>\r\n          </AccountRow>\r\n          <AccountRow>\r\n            <Title>PW</Title>\r\n            <span>{accountPwd}</span>\r\n          </AccountRow>\r\n        </PropWrap>\r\n      </CustomRow>\r\n      <Popover content={popMenu} trigger=\"focus\">\r\n        <ActionButton>\r\n          <MoreOutlined />\r\n        </ActionButton>\r\n      </Popover>\r\n    </CustomCard>\r\n  );\r\n}\r\n\r\nconst CustomCard = styled(Card)`\r\n  margin: 12px;\r\n  color: #fff;\r\n  background: #1a1d21;\r\n  border: 1px solid #3f3f3f;\r\n  color: rgba(255, 255, 255, 0.65);\r\n\r\n  & p {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst CustomRow = styled(Row)`\r\n  align-items: center;\r\n  flex-flow: row nowrap;\r\n\r\n  &:first-child {\r\n    margin-bottom: 12px;\r\n  }\r\n`;\r\n\r\nconst AccountRow = styled(Row)`\r\n  flex-flow: row nowrap;\r\n\r\n  & > span:last-child {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n`;\r\n\r\nconst CustomAvatar = styled(Avatar)`\r\n  min-width: 32px;\r\n  height: 32px;\r\n`;\r\n\r\nconst PropWrap = styled.div`\r\n  margin-left: 18px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst SiteName = styled.div`\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n\r\n  & span {\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    color: #3574b0;\r\n  }\r\n\r\n  & span:first-child {\r\n    margin-right: 5px;\r\n    font-size: 16px;\r\n    color: #4694df;\r\n  }\r\n`;\r\n\r\nconst SiteUrl = styled.div`\r\n  font-size: 11px;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  margin-right: 10px;\r\n  color: #fff;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst ActionButton = styled(Button)`\r\n  position: absolute;\r\n  top: 14px;\r\n  right: 14px;\r\n  cursor: pointer;\r\n  background: 0;\r\n  border: 0;\r\n  padding: 0;\r\n  color: rgba(255, 255, 255, 0.65);\r\n\r\n  &:hover, &:focus, &:active {\r\n    opacity: 0.7;\r\n    background: 0;\r\n    border: 0;\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst CustomDivider = styled(Divider)`\r\n  margin: 12px 0;\r\n  border-top: 1px solid rgb(63 63 63);\r\n`;\r\n\r\nconst CustomList = styled(List)`\r\n  & .ant-spin-container {\r\n    cursor: pointer;\r\n    color: rgba(255, 255, 255, 0.65);\r\n  }\r\n\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nexport default AccountCard;\r\n","F:\\side\\amp\\src\\Components\\Layout\\Content\\CreateAccountCard.js",[],"F:\\side\\amp\\src\\Components\\Layout\\Content\\Form\\AccountForm.js",["63","64"],"import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Form, Input, Modal } from 'antd';\r\n\r\nconst AccountForm = (props) => {\r\n  const { accountFormat, formChangeHandle } = props;\r\n  const { siteNameKr, siteNameEng, siteUrl, accountId, accountPwd } = accountFormat;\r\n\r\n  useEffect(() => {\r\n    console.log(\"Asd\");\r\n  }, [accountFormat]);\r\n\r\n  return (\r\n    <Form labelCol={{ span: 4 }} wrapperCol={{ span: 14 }} layout=\"horizontal\" size=\"large\">\r\n      <Form.Item label=\"사이트 한글 이름\">\r\n        <Input name=\"siteNameKr\" value={siteNameKr} onChange={(e) => formChangeHandle(e)} />\r\n      </Form.Item>\r\n      <Form.Item label=\"사이트 영문 이름\">\r\n        <Input name=\"siteNameEng\" value={siteNameEng} onChange={(e) => formChangeHandle(e)} />\r\n      </Form.Item>\r\n      <Form.Item label=\"사이트 URL\">\r\n        <Input name=\"siteUrl\" value={siteUrl} onChange={(e) => formChangeHandle(e)} />\r\n      </Form.Item>\r\n      <Form.Item label=\"계정 ID\">\r\n        <Input name=\"accountId\" value={accountId} onChange={(e) => formChangeHandle(e)} />\r\n      </Form.Item>\r\n      <Form.Item label=\"계정 PW\">\r\n        <Input name=\"accountPwd\" value={accountPwd} onChange={(e) => formChangeHandle(e)} />\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default AccountForm;\r\n",["65","66"],"F:\\side\\amp\\src\\Components\\Layout\\Side\\Menu.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"75","line":3,"column":16,"nodeType":"73","messageId":"74","endLine":3,"endColumn":22},{"ruleId":"71","severity":1,"message":"76","line":152,"column":7,"nodeType":"73","messageId":"74","endLine":152,"endColumn":17},{"ruleId":"71","severity":1,"message":"72","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"77","line":3,"column":23,"nodeType":"73","messageId":"74","endLine":3,"endColumn":28},{"ruleId":"67","replacedBy":"78"},{"ruleId":"69","replacedBy":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'Avatar' is defined but never used.","'CustomList' is assigned a value but never used.","'Modal' is defined but never used.",["80"],["81"],"no-global-assign","no-unsafe-negation"]