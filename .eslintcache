[{"F:\\side\\amp\\src\\index.js":"1","F:\\side\\amp\\src\\reportWebVitals.js":"2","F:\\side\\amp\\src\\App.js":"3","F:\\side\\amp\\src\\Components\\Account\\index.js":"4","F:\\side\\amp\\src\\Components\\Account\\AccountList.js":"5","F:\\side\\amp\\src\\Components\\Layout\\Side\\index.js":"6","F:\\side\\amp\\src\\Components\\Layout\\Content\\index.js":"7","F:\\side\\amp\\src\\Components\\index.js":"8","F:\\side\\amp\\src\\Components\\Layout\\Content\\accountCard.js":"9","F:\\side\\amp\\src\\Components\\Layout\\Content\\AccountCard.js":"10","F:\\side\\amp\\src\\Components\\Layout\\Content\\CreateAccountCard.js":"11","F:\\side\\amp\\src\\Components\\Layout\\Content\\Form\\AccountForm.js":"12"},{"size":295,"mtime":1612255184964,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":413,"mtime":1612766299130,"results":"16","hashOfConfig":"14"},{"size":1052,"mtime":1611893104720,"results":"17","hashOfConfig":"14"},{"size":343,"mtime":1611889210059,"results":"18","hashOfConfig":"14"},{"size":3681,"mtime":1612923494281,"results":"19","hashOfConfig":"14"},{"size":2299,"mtime":1612918803155,"results":"20","hashOfConfig":"14"},{"size":770,"mtime":1612918821000,"results":"21","hashOfConfig":"14"},{"size":1738,"mtime":1612318506436,"results":"22","hashOfConfig":"14"},{"size":3154,"mtime":1612837993060,"results":"23","hashOfConfig":"14"},{"size":826,"mtime":1612334865950,"results":"24","hashOfConfig":"14"},{"size":726,"mtime":1612338006063,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1j20o6c",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"F:\\side\\amp\\src\\index.js",[],["54","55"],"F:\\side\\amp\\src\\reportWebVitals.js",[],"F:\\side\\amp\\src\\App.js",[],"F:\\side\\amp\\src\\Components\\Account\\index.js",[],"F:\\side\\amp\\src\\Components\\Account\\AccountList.js",[],"F:\\side\\amp\\src\\Components\\Layout\\Side\\index.js",["56","57"],"F:\\side\\amp\\src\\Components\\Layout\\Content\\index.js",["58"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Layout, Row, Col, Empty, Modal } from 'antd';\r\nimport AccountCard from './AccountCard';\r\nimport CreateAccountCard from './CreateAccountCard';\r\nimport AccountForm from './Form/AccountForm';\r\nimport AccountList from '../../../TempData/AccountList.json';\r\nconst { ipcRenderer } = window;\r\n\r\n\r\nconst { Content } = Layout;\r\n\r\nconst ContentBox = ({ selectGroup }) => {\r\n  console.log(selectGroup);\r\n  const filteredData = AccountList.filter((v) => v.group === selectGroup );\r\n  const accountData = filteredData.map((v) => (\r\n    <Col key={v.id} xl={{ span: 6 }} lg={{ span: 8 }} md={{ span: 12 }} sm={{ span: 24 }} xs={{ span: 24 }}>\r\n      <AccountCard data={v} />\r\n    </Col>\r\n  ));\r\n\r\n  const test = () => {\r\n    ipcRenderer.send('foo', {\r\n      name: 'hi'\r\n    })\r\n    // window.ipcRenderer.on('asynchronous-reply', (event, arg) => {\r\n    //   console.log(arg); \r\n    // });\r\n    // window.ipcRenderer.send('asynchronous-message', 'ping');\r\n  }\r\n\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  return (\r\n    <CustomContent>\r\n      {\r\n        accountData.length !== 0\r\n          ? (\r\n            <Row>\r\n              {accountData}\r\n              <Col xl={{ span: 6 }} lg={{ span: 8 }} md={{ span: 12 }} sm={{ span: 24 }} xs={{ span: 24 }} onClick={() => setModalVisible(!modalVisible)}>\r\n                <CreateAccountCard/>\r\n              </Col>\r\n            </Row> \r\n          )\r\n          : (\r\n            <EmptyWrap>\r\n              <CustomEmpty onClick={test} />\r\n            </EmptyWrap>\r\n          )\r\n      }\r\n      <Modal\r\n        title=\"Modal 1000px width\"\r\n        centered\r\n        visible={modalVisible}\r\n        onOk={() => setModalVisible(false)}\r\n        onCancel={() => setModalVisible(false)}\r\n        width={1000}\r\n      >\r\n        <AccountForm groupId={selectGroup} />\r\n      </Modal>\r\n    </CustomContent>\r\n  );\r\n}\r\n\r\nconst CustomContent = styled(Content)`\r\n  padding: 12px;\r\n  color: #fff;\r\n`;\r\n\r\nconst EmptyWrap = styled.div`\r\n  display: table;\r\n  height: 100%;\r\n  width: 100%;\r\n  color: rgba(255, 255, 255, 0.65);\r\n`;\r\n\r\nconst CustomEmpty = styled(Empty)`\r\n  display: table-cell;\r\n  vertical-align: middle;\r\n  height: 100%;\r\n`;\r\n\r\nexport default ContentBox;\r\n","F:\\side\\amp\\src\\Components\\index.js",[],"F:\\side\\amp\\src\\Components\\Layout\\Content\\accountCard.js",["59","60"],"F:\\side\\amp\\src\\Components\\Layout\\Content\\AccountCard.js",["61"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Card, Avatar, Row, Divider, Popover, List } from 'antd';\r\nimport {\r\n  MoreOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n} from '@ant-design/icons';\r\nimport AccountLinkage from '../../../TempData/AccountLinkage.json';\r\n\r\nconst popMenu = (\r\n  <>\r\n    <List>수정<EditOutlined /></List>\r\n    <List>삭제<DeleteOutlined /></List>\r\n  </>\r\n);\r\n\r\nconst AccountCard = ({ data }) => {\r\n  const { siteNameKr, siteNameEng, siteUrl, siteIcon, accountId, accountPwd, linkedId } = data;\r\n  const LinkedFavicon = linkedId ? AccountLinkage.filter((v) => v.id === linkedId ) : '';\r\n  \r\n  return (\r\n    <CustomCard>\r\n      <CustomRow>\r\n        <CustomAvatar src={siteIcon} />\r\n        <PropWrap>\r\n          <SiteName>\r\n            <span>{siteNameKr}</span>\r\n            <span>{siteNameEng}</span>\r\n          </SiteName>\r\n          <SiteUrl>{siteUrl}</SiteUrl>\r\n        </PropWrap>\r\n      </CustomRow>\r\n      <CustomDivider />\r\n      <CustomRow>\r\n        { LinkedFavicon ? <CustomAvatar src={LinkedFavicon[0].favicon} /> : <CustomAvatar src={siteIcon} /> }\r\n        <PropWrap>\r\n          <AccountRow>\r\n            <Title>ID</Title>\r\n            <span>{accountId}</span>\r\n          </AccountRow>\r\n          <AccountRow>\r\n            <Title>PW</Title>\r\n            <span>{accountPwd}</span>\r\n          </AccountRow>\r\n        </PropWrap>\r\n      </CustomRow>\r\n      <Popover content={popMenu} trigger=\"click\">\r\n        <ActionButton />\r\n      </Popover>\r\n    </CustomCard>\r\n  );\r\n}\r\n\r\nconst CustomCard = styled(Card)`\r\n  margin: 12px;\r\n  color: #fff;\r\n  background: #1a1d21;\r\n  border: 1px solid #3f3f3f;\r\n  color: rgba(255, 255, 255, 0.65);\r\n\r\n  & p {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst CustomRow = styled(Row)`\r\n  align-items: center;\r\n  flex-flow: row nowrap;\r\n\r\n  &:first-child {\r\n    margin-bottom: 12px;\r\n  }\r\n`;\r\n\r\nconst AccountRow = styled(Row)`\r\n  flex-flow: row nowrap;\r\n\r\n  & > span:last-child {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n`;\r\n\r\nconst CustomAvatar = styled(Avatar)`\r\n  min-width: 32px;\r\n  height: 32px;\r\n`;\r\n\r\nconst PropWrap = styled.div`\r\n  margin-left: 18px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst SiteName = styled.div`\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n\r\n  & span {\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    color: #3574b0;\r\n  }\r\n\r\n  & span:first-child {\r\n    margin-right: 5px;\r\n    font-size: 16px;\r\n    color: #4694df;\r\n  }\r\n`;\r\n\r\nconst SiteUrl = styled.div`\r\n  font-size: 11px;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  margin-right: 10px;\r\n  color: #fff;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst ActionButton = styled(MoreOutlined)`\r\n  position: absolute;\r\n  top: 14px;\r\n  right: 14px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst CustomDivider = styled(Divider)`\r\n  margin: 12px 0;\r\n  border-top: 1px solid rgb(63 63 63);\r\n`;\r\n\r\nconst CustomList = styled(List)`\r\n  & .ant-spin-container {\r\n    cursor: pointer;\r\n    color: rgba(255, 255, 255, 0.65);\r\n  }\r\n\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nexport default AccountCard;\r\n","F:\\side\\amp\\src\\Components\\Layout\\Content\\CreateAccountCard.js",[],"F:\\side\\amp\\src\\Components\\Layout\\Content\\Form\\AccountForm.js",["62","63"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Form, Input, Modal } from 'antd';\r\n\r\nconst AccountForm = ({ groupId }) => {\r\n  return (\r\n    <Form labelCol={{ span: 4 }} wrapperCol={{ span: 14 }} layout=\"horizontal\" size=\"large\">\r\n      <Form.Item label=\"사이트 한글 이름\">\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item label=\"사이트 영문 이름\">\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item label=\"사이트 URL\">\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item label=\"계정 ID\">\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item label=\"계정 PW\">\r\n        <Input />\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default AccountForm;\r\n",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":13,"column":10,"nodeType":"70","messageId":"71","endLine":13,"endColumn":21},{"ruleId":"68","severity":1,"message":"72","line":13,"column":23,"nodeType":"70","messageId":"71","endLine":13,"endColumn":37},{"ruleId":"68","severity":1,"message":"73","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":26},{"ruleId":"68","severity":1,"message":"74","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":14},{"ruleId":"68","severity":1,"message":"75","line":3,"column":16,"nodeType":"70","messageId":"71","endLine":3,"endColumn":22},{"ruleId":"68","severity":1,"message":"76","line":141,"column":7,"nodeType":"70","messageId":"71","endLine":141,"endColumn":17},{"ruleId":"68","severity":1,"message":"74","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":14},{"ruleId":"68","severity":1,"message":"77","line":3,"column":23,"nodeType":"70","messageId":"71","endLine":3,"endColumn":28},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'updateValue' is assigned a value but never used.","Identifier","unusedVar","'setUpdateValue' is assigned a value but never used.","'useEffect' is defined but never used.","'styled' is defined but never used.","'Avatar' is defined but never used.","'CustomList' is assigned a value but never used.","'Modal' is defined but never used.","no-global-assign","no-unsafe-negation"]